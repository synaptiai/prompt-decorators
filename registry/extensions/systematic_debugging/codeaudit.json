{
  "decoratorName": "CodeAudit",
  "version": "1.0.0",
  "description": "Requests an audit of existing code to identify issues before making changes.",
  "author": {
    "name": "Prompt Decorators Working Group",
    "email": "promptdecoratorspec@synapti.ai",
    "url": "https://synapti.ai"
  },
  "parameters": [
    {
      "name": "scope",
      "type": "enum",
      "description": "Audit scope",
      "enum": [
        "function",
        "component",
        "module",
        "system",
        "specific-issue"
      ],
      "default": "component",
      "required": false
    },
    {
      "name": "focus",
      "type": "enum",
      "description": "Audit focus areas",
      "enum": [
        "bugs",
        "performance",
        "security",
        "maintainability",
        "all"
      ],
      "default": "all",
      "required": false
    },
    {
      "name": "output",
      "type": "enum",
      "description": "Audit output format",
      "enum": [
        "summary",
        "detailed",
        "categorized",
        "prioritized"
      ],
      "default": "detailed",
      "required": false
    }
  ],
  "transformationTemplate": {
    "instruction": "Before making any changes, please perform a code audit to identify potential issues.",
    "parameterMapping": {
      "scope": {
        "valueMap": {
          "function": "Focus your audit on the specific function provided.",
          "component": "Examine the entire component for issues.",
          "module": "Conduct a thorough audit of the complete module.",
          "system": "Perform a system-wide audit to identify issues across all components.",
          "specific-issue": "Focus your audit specifically on the issue described."
        }
      },
      "focus": {
        "valueMap": {
          "bugs": "Concentrate on identifying logical errors, edge cases, and potential runtime exceptions.",
          "performance": "Analyze for performance bottlenecks, inefficient algorithms, and resource usage issues.",
          "security": "Identify security vulnerabilities, injection risks, and data protection concerns.",
          "maintainability": "Evaluate code quality, documentation, and adherence to best practices.",
          "all": "Examine all aspects including bugs, performance, security, and maintainability."
        }
      },
      "output": {
        "valueMap": {
          "summary": "Provide a concise summary of the key issues found.",
          "detailed": "Deliver a comprehensive report with detailed explanations of each issue.",
          "categorized": "Organize findings by category (bugs, performance, security, etc.).",
          "prioritized": "Present issues in order of importance, with critical issues first."
        }
      }
    },
    "placement": "prepend",
    "compositionBehavior": "accumulate"
  },
  "implementationGuidance": {
    "examples": [
      {
        "context": "Code review for a payment processing system",
        "originalPrompt": "Refactor this payment processing code to improve performance.",
        "transformedPrompt": "Before making any changes, please perform a code audit to identify potential issues. Conduct a thorough audit of the complete module. Analyze for performance bottlenecks, inefficient algorithms, and resource usage issues. Deliver a comprehensive report with detailed explanations of each issue.\n\nRefactor this payment processing code to improve performance.",
        "notes": "The decorator adds instructions to first audit the code before proceeding with the requested refactoring."
      }
    ],
    "compatibilityNotes": [
      {
        "decorator": "CodeRefactor",
        "relationship": "enhances",
        "notes": "CodeAudit works well before CodeRefactor to ensure issues are identified before making changes."
      },
      {
        "decorator": "QuickFix",
        "relationship": "conflicts",
        "notes": "CodeAudit's thorough analysis approach conflicts with QuickFix's rapid solution focus."
      }
    ],
    "modelSpecificImplementations": {
      "gpt-4-turbo": {
        "instruction": "Analyze this code carefully before suggesting any changes. Look for issues related to {focus} within the {scope} and provide a {output} report.",
        "notes": "Simplified instruction for models with more limited context windows."
      }
    }
  },
  "examples": [
    {
      "description": "Basic code audit for a payment module",
      "usage": "+++CodeAudit(scope=module, focus=bugs, output=prioritized)\nAudit the payment processing module to identify potential bugs and issues. Provide a prioritized list of problems found.",
      "result": "The model will perform a thorough audit of the payment processing module, focusing specifically on bugs and logical errors, and will present the findings as a prioritized list with the most critical issues first."
    },
    {
      "description": "Security-focused audit of a component",
      "usage": "+++CodeAudit(scope=component, focus=security, output=detailed)\nReview this authentication component for security vulnerabilities.",
      "result": "The model will examine the authentication component with a focus on security vulnerabilities, providing a detailed report of all potential security issues found."
    }
  ],
  "compatibility": {
    "requires": [],
    "conflicts": [
      "QuickFix"
    ],
    "minStandardVersion": "1.0.0",
    "maxStandardVersion": "2.0.0",
    "models": [
      "gpt-4o",
      "gpt-4-turbo",
      "claude-3-7-sonnet-latest",
      "llama-3.2"
    ]
  }
}
