{
  "decoratorName": "Monitoring",
  "version": "1.0.0",
  "description": "Creates monitoring and alerting setups for systems.",
  "author": {
    "name": "Prompt Decorators Working Group",
    "email": "promptdecoratorspec@synapti.ai",
    "url": "https://synapti.ai"
  },
  "parameters": [
    {
      "name": "focus",
      "type": "enum",
      "description": "Monitoring emphasis",
      "enum": [
        "performance",
        "errors",
        "security",
        "business-metrics",
        "user-experience",
        "comprehensive"
      ],
      "default": "comprehensive",
      "required": false
    },
    {
      "name": "tools",
      "type": "enum",
      "description": "Preferred monitoring tools",
      "enum": [
        "datadog",
        "prometheus",
        "cloudwatch",
        "newrelic",
        "grafana",
        "elastic",
        "recommend"
      ],
      "default": "recommend",
      "required": false
    },
    {
      "name": "implementation",
      "type": "enum",
      "description": "Implementation depth",
      "enum": [
        "concepts",
        "configuration",
        "full-setup"
      ],
      "default": "configuration",
      "required": false
    }
  ],
  "transformationTemplate": {
    "instruction": "Create a monitoring and alerting setup for the described system. Focus on providing practical, implementable monitoring solutions.",
    "parameterMapping": {
      "focus": {
        "valueMap": {
          "performance": "Emphasize performance metrics, throughput, and latency monitoring.",
          "errors": "Prioritize error detection, logging, and exception tracking.",
          "security": "Focus on security-related monitoring, intrusion detection, and vulnerability scanning.",
          "business-metrics": "Concentrate on business KPIs and metrics that align with organizational goals.",
          "user-experience": "Monitor user interactions, satisfaction metrics, and frontend performance.",
          "comprehensive": "Provide a balanced monitoring approach covering all critical aspects of the system."
        }
      },
      "tools": {
        "valueMap": {
          "datadog": "Implement the solution using Datadog as the primary monitoring platform.",
          "prometheus": "Use Prometheus and associated tools for metrics collection and alerting.",
          "cloudwatch": "Leverage AWS CloudWatch for monitoring and alerting capabilities.",
          "newrelic": "Build the monitoring solution around New Relic's observability platform.",
          "grafana": "Utilize Grafana for dashboarding, with appropriate data sources for collection.",
          "elastic": "Implement using the Elastic Stack (Elasticsearch, Logstash, Kibana).",
          "recommend": "Suggest the most appropriate monitoring tools based on the system requirements."
        }
      },
      "implementation": {
        "valueMap": {
          "concepts": "Provide a high-level conceptual overview of the monitoring approach.",
          "configuration": "Include specific configuration examples and implementation details.",
          "full-setup": "Deliver comprehensive setup instructions with code samples and deployment guidance."
        }
      }
    },
    "placement": "prepend",
    "compositionBehavior": "accumulate"
  },
  "implementationGuidance": {
    "examples": [
      {
        "context": "Microservices Architecture",
        "originalPrompt": "Create a monitoring solution for our microservices architecture focusing on performance metrics and latency.",
        "transformedPrompt": "Create a monitoring and alerting setup for the described system. Focus on providing practical, implementable monitoring solutions. Emphasize performance metrics, throughput, and latency monitoring. Use Prometheus and associated tools for metrics collection and alerting. Include specific configuration examples and implementation details.\n\nCreate a monitoring solution for our microservices architecture focusing on performance metrics and latency.",
        "notes": "This example shows how the decorator adds specific guidance for performance monitoring in a microservices context using Prometheus."
      },
      {
        "context": "E-commerce Platform",
        "originalPrompt": "How should we monitor our e-commerce platform?",
        "transformedPrompt": "Create a monitoring and alerting setup for the described system. Focus on providing practical, implementable monitoring solutions. Provide a balanced monitoring approach covering all critical aspects of the system. Suggest the most appropriate monitoring tools based on the system requirements. Include specific configuration examples and implementation details.\n\nHow should we monitor our e-commerce platform?",
        "notes": "This example uses default values to provide a comprehensive monitoring approach with tool recommendations."
      }
    ],
    "compatibilityNotes": [
      {
        "decorator": "Infrastructure",
        "relationship": "enhances",
        "notes": "Monitoring works well with Infrastructure decorator to provide complete infrastructure-as-code solutions with built-in monitoring."
      },
      {
        "decorator": "Security",
        "relationship": "enhances",
        "notes": "When combined with Security decorator, can create security-focused monitoring solutions."
      }
    ],
    "modelSpecificImplementations": {
      "gpt-4-turbo": {
        "instruction": "Create a monitoring setup for the system described below. Include specific tools, metrics to track, and alert configurations.",
        "notes": "Simplified instruction for models with more limited context windows."
      }
    }
  },
  "examples": [
    {
      "description": "Performance monitoring for microservices",
      "usage": "+++Monitoring(focus=performance, tools=prometheus, implementation=configuration)\nCreate a monitoring solution for our microservices architecture focusing on performance metrics and latency.",
      "result": "Provides a Prometheus-based monitoring configuration focused on performance metrics like request rates, latency distributions, and resource utilization for microservices."
    },
    {
      "description": "Security monitoring with comprehensive setup",
      "usage": "+++Monitoring(focus=security, tools=elastic, implementation=full-setup)\nWe need to monitor our cloud infrastructure for potential security breaches.",
      "result": "Delivers a complete Elastic Stack setup with detailed implementation instructions for security monitoring, including log collection, SIEM rules, and security dashboards."
    },
    {
      "description": "Business metrics monitoring concepts",
      "usage": "+++Monitoring(focus=business-metrics, implementation=concepts)\nWhat should we monitor for our SaaS product?",
      "result": "Provides conceptual guidance on monitoring business KPIs for a SaaS product, including customer acquisition costs, churn rates, and lifetime value metrics."
    }
  ],
  "compatibility": {
    "requires": [],
    "conflicts": [],
    "minStandardVersion": "1.0.0",
    "maxStandardVersion": "2.0.0",
    "models": [
      "gpt-4-turbo",
      "gpt-4o",
      "claude-3-7-sonnet-latest",
      "llama-3.2"
    ]
  }
}
