{
  "decoratorName": "DecisionMatrix",
  "version": "1.0.0",
  "description": "Structures the response as a decision matrix, evaluating options against multiple criteria. This decorator facilitates systematic comparison and selection between alternatives based on weighted or unweighted criteria.",
  "author": {
    "name": "Prompt Decorators Working Group",
    "email": "promptdecoratorspec@synapti.ai",
    "url": "https://synapti.ai"
  },
  "parameters": [
    {
      "name": "options",
      "type": "array",
      "description": "Specific options or alternatives to evaluate in the matrix",
      "required": false
    },
    {
      "name": "criteria",
      "type": "array",
      "description": "Evaluation criteria to assess each option against",
      "required": false
    },
    {
      "name": "weighted",
      "type": "boolean",
      "description": "Whether to include weights for criteria importance",
      "default": false,
      "required": false
    },
    {
      "name": "scale",
      "type": "enum",
      "description": "Rating scale to use for evaluations",
      "enum": ["1-5", "1-10", "qualitative", "percentage"],
      "default": "1-5",
      "required": false
    }
  ],
  "examples": [
    {
      "description": "Simple decision matrix for comparing options",
      "usage": "+++DecisionMatrix\nWhat smartphone should I buy?",
      "result": "Creates a decision matrix comparing top smartphone options against key purchasing criteria, with 1-5 ratings for each combination"
    },
    {
      "description": "Weighted decision matrix with custom options and criteria",
      "usage": "+++DecisionMatrix(options=[Python,JavaScript,Go,Rust], criteria=[learning curve,performance,ecosystem,job market], weighted=true, scale=1-10)\nWhich programming language should I learn next?",
      "result": "Generates a weighted decision matrix comparing the specified programming languages against the given criteria, with weighted scores on a 1-10 scale"
    }
  ],
  "compatibility": {
    "requires": [],
    "conflicts": [],
    "minStandardVersion": "1.0.0",
    "maxStandardVersion": "2.0.0",
    "models": [
      "gpt-4",
      "gpt-3.5-turbo"
    ]
  }
}
