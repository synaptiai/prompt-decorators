{
  "decoratorName": "Deductive",
  "version": "1.0.0",
  "description": "Structures the response using deductive reasoning, moving from general principles to specific conclusions. This decorator emphasizes logical argument development, starting with premises and working methodically to necessary conclusions.",
  "author": {
    "name": "Prompt Decorators Working Group",
    "email": "promptdecoratorspec@synapti.ai",
    "url": "https://synapti.ai"
  },
  "parameters": [
    {
      "name": "premises",
      "type": "number",
      "description": "Number of main premises to include before deducing conclusions",
      "default": 2,
      "required": false,
      "validation": {
        "minimum": 1,
        "maximum": 5
      }
    },
    {
      "name": "formal",
      "type": "boolean",
      "description": "Whether to use formal logical structures with explicit syllogisms",
      "default": false,
      "required": false
    },
    {
      "name": "steps",
      "type": "number",
      "description": "Number of logical steps to include in the deductive process",
      "default": 3,
      "required": false,
      "validation": {
        "minimum": 2,
        "maximum": 7
      }
    }
  ],
  "examples": [
    {
      "description": "Basic deductive reasoning from principles to specific conclusions",
      "usage": "+++Deductive\nShould social media companies be regulated like utilities?",
      "result": "Starts with general principles about utilities and regulation, establishes premises about social media characteristics, and deduces conclusions about appropriate regulatory approaches"
    },
    {
      "description": "Formal deductive logic with multiple steps",
      "usage": "+++Deductive(formal=true, steps=5)\nIs artificial intelligence conscious?",
      "result": "Presents formal logical syllogisms about consciousness and intelligence, proceeding through 5 distinct logical steps to reach conclusions about AI consciousness"
    }
  ],
  "compatibility": {
    "requires": [],
    "conflicts": ["Inductive"],
    "minStandardVersion": "1.0.0",
    "maxStandardVersion": "2.0.0",
    "models": [
      "gpt-4",
      "gpt-3.5-turbo"
    ]
  }
}
