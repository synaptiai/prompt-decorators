name: Documentation

on:
  push:
    branches: [main, master]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'README.md'
      - 'prompt_decorators/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [main, master]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'README.md'
      - 'prompt_decorators/**'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

# Required permissions for GitHub Pages deployment and PR comments
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write  # Added permission for commenting on PRs (including Dependabot PRs)

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for git-revision-date-localized-plugin

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with mcp
          # Install all required MkDocs plugins explicitly
          pip install mkdocs>=1.5.0
          pip install mkdocs-material>=9.0.0
          pip install mkdocs-awesome-pages-plugin==2.10.1
          pip install mkdocs-autolinks-plugin>=0.7.0
          pip install mkdocs-git-revision-date-localized-plugin>=1.2.0
          pip install mkdocs-minify-plugin>=0.7.0
          pip install mkdocstrings>=0.24.0
          pip install mkdocstrings-python>=1.7.0
          pip install mike
          # Install any additional requirements
          if [ -f docs/requirements.txt ]; then
            pip install -r docs/requirements.txt
          fi

      - name: Verify plugins installation
        run: |
          echo "Verifying MkDocs plugins installation:"
          pip list | grep mkdocs
          # Run plugin verification script if it exists
          if [ -f scripts/check_mkdocs_plugins.py ]; then
            python scripts/check_mkdocs_plugins.py
          fi
          # Verify awesome-pages plugin specifically
          if [ -f scripts/verify_awesome_pages.py ]; then
            python scripts/verify_awesome_pages.py
          fi

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Build documentation
        run: |
          mkdocs build --strict

      - name: Deploy documentation preview
        if: github.event_name == 'pull_request'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          destination_dir: pr-preview/${{ github.event.pull_request.number }}

      - name: Comment on PR with preview link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoName = context.repo.repo;
            const ownerName = context.repo.owner;

            const previewUrl = `https://${ownerName}.github.io/${repoName}/pr-preview/${prNumber}/`;

            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: ownerName,
              repo: repoName,
              body: `ðŸ“š Documentation preview is available at: [${previewUrl}](${previewUrl})`
            });

      - name: Deploy to GitHub Pages
        if: github.event_name != 'pull_request'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
