site_name: Prompt Decorators
site_url: https://github.com/synaptiai/prompt-decorators
repo_url: https://github.com/synaptiai/prompt-decorators
theme:
  name: material
  palette:
    primary: indigo
    accent: indigo
  features:
    - navigation.instant
    - navigation.tracking
    - navigation.sections
    - navigation.indexes
    - navigation.top
    - navigation.footer
    - search.highlight
    - search.share
    - content.code.copy
    - content.code.annotate
    - content.tabs.link
    - toc.follow
  icon:
    repo: fontawesome/brands/github
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: "pymdownx.superfences.fence_code_format"
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.tasklist:
      custom_checkbox: true
  - admonition
  - pymdownx.details
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - attr_list
  - def_list
  - md_in_html
  - toc:
      permalink: true
plugins:
  - search
  - awesome-pages:
      collapse_single_pages: true
      strict: false
      filename: .pages
  - autolinks
  - minify:
      minify_html: true
      minify_js: true
      minify_css: true
  - git-revision-date-localized:
      enable_creation_date: true
      fallback_to_build_date: true
  - mkdocstrings:
      default_handler: python
      handlers:
        python:
          selection:
            docstring_style: google
          rendering:
            show_source: true
            show_category_heading: true
            show_if_no_docstring: false

# Navigation structure with explicit sections and files
nav:
  - Home: index.md
  - Getting Started:
    - Installation: installation.md
    - Quick Start: quickstart.md
    - Core Concepts: concepts.md
    - Creating Decorators: creating_decorators.md
    - Compatibility: compatibility.md
  - Tutorials:
    - Creating Custom Decorators: tutorials/creating_custom_decorator.md
    - Combining Decorators: tutorials/combining_decorators.md
    - Extension Development: tutorials/extension_development.md
    - Comprehensive Tutorial: tutorials/comprehensive_tutorial.md
  - API Reference:
    - Overview: api/index.md
    - Core: api/core.md
    - Decorators: api/decorators.md
  - Integrations:
    - Overview: integrations/index.md
    - Model Context Protocol (MCP): integrations/mcp.md
  - Examples:
    - Basic Examples: examples/basic.md
    - Advanced Examples: examples/advanced.md
    - Provider Examples: examples/providers.md
  - Domain Guides:
    - Healthcare: guides/healthcare.md
    - AI Safety: guides/ai_safety.md
    - Domain-Specific Extensions: guides/domain_specific_extensions.md
  - Contributing:
    - Guidelines: contributing.md
    - Development Setup: development.md
    - Development Guide: development_guide.md
    - Documentation: documentation_workflow.md
    - Documentation Standards: DOCSTRING_STANDARDS.md
    - Decorator Registry: DECORATOR_REGISTRY.md
    - Type Annotation Improvements: type_annotation_improvements.md
    - Docstring Improvement Plan: docstring_improvement_plan.md
    - MkDocs Enhancement Plan: mkdocs_enhancement_plan.md
    - Documentation Checklist: documentation_checklist.md
  - Project Documentation:
    - Roadmap: roadmap.md
    - Architecture: architecture.md
    - Specification: prompt-decorators-specification-v1.0.md
    - Code Quality Integration: code_quality_integration.md
    - FAQ: faq.md
    - Glossary: glossary.md
    - Navigation: navigation.md
  - Tools:
    - Validator Tool: validator_tool.md
