{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Prompt Decorator Schema",
  "description": "Schema for prompt decorator definitions",
  "type": "object",
  "required": ["decoratorName", "version"],
  "properties": {
    "decoratorName": {
      "type": "string",
      "description": "Name of the decorator"
    },
    "version": {
      "type": "string",
      "description": "Semantic version of the decorator (e.g., 1.0.0)",
      "pattern": "^\\d+\\.\\d+\\.\\d+$"
    },
    "description": {
      "type": "string",
      "description": "Description of the decorator's purpose and behavior"
    },
    "author": {
      "type": "object",
      "description": "Information about the decorator's author",
      "properties": {
        "name": {
          "type": "string",
          "description": "Author's name"
        },
        "email": {
          "type": "string",
          "description": "Author's email address",
          "format": "email"
        },
        "url": {
          "type": "string",
          "description": "Author's URL",
          "format": "uri"
        }
      }
    },
    "parameters": {
      "type": "array",
      "description": "List of parameters accepted by the decorator",
      "items": {
        "type": "object",
        "required": ["name", "type"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Parameter name"
          },
          "type": {
            "type": "string",
            "description": "Parameter data type",
            "enum": ["string", "number", "boolean", "array", "object", "enum"]
          },
          "description": {
            "type": "string",
            "description": "Parameter description"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the parameter is required",
            "default": false
          },
          "default": {
            "description": "Default value for the parameter"
          },
          "enum": {
            "type": "array",
            "description": "Possible values for enum parameters",
            "items": {
              "type": "string"
            }
          },
          "min": {
            "type": "number",
            "description": "Minimum value for numeric parameters"
          },
          "max": {
            "type": "number",
            "description": "Maximum value for numeric parameters"
          },
          "pattern": {
            "type": "string",
            "description": "Regular expression pattern for string parameters"
          }
        }
      }
    },
    "examples": {
      "type": "array",
      "description": "Examples of using the decorator",
      "items": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Example description"
          },
          "usage": {
            "type": "string",
            "description": "Example usage"
          },
          "result": {
            "type": "string",
            "description": "Expected result"
          },
          "prompt": {
            "type": "string",
            "description": "Sample prompt for the example"
          },
          "parameters": {
            "type": "object",
            "description": "Parameter values for the example"
          }
        }
      }
    },
    "compatibility": {
      "type": "object",
      "description": "Compatibility information",
      "properties": {
        "requires": {
          "type": "array",
          "description": "Decorators that this decorator requires",
          "items": {
            "type": "string"
          }
        },
        "conflicts": {
          "type": "array",
          "description": "Decorators that conflict with this decorator",
          "items": {
            "type": "string"
          }
        },
        "minStandardVersion": {
          "type": "string",
          "description": "Minimum standard version required",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "maxStandardVersion": {
          "type": "string",
          "description": "Maximum standard version supported",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "models": {
          "type": "array",
          "description": "Models that support this decorator",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "category": {
      "type": "string",
      "description": "Category of the decorator"
    }
  }
} 